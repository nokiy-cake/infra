apiVersion: apps/v1
kind: Deployment
metadata:
  name: nokiy-deployment
  namespace: self-nokiy-net
  labels:
    app: nokiy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nokiy
  template:
    metadata:
      labels:
        app: nokiy
    spec:
      initContainers:
      - name: init-config
        image: busybox:1.36 # A lightweight image to perform the file creation
        imagePullPolicy: Always
        command: ["sh", "-c"]
        args:
          - |
            # Create the nokiy.config.yaml file using a here-document
            cat <<EOF > /config/nokiy.config.yaml
            # This configuration is generated by the init container
            log_level: info
            db:
              uri: postgres://${username}:${password}@${host:-pooler-postgres-nokiy-rw}:${DB_PORT:-5432}/${DB_NAME:-nokiy}
            EOF

            echo "Configuration file created successfully in /config/nokiy.config.yaml"
            echo "--- Content of the file ---"
            cat /config/nokiy.config.yaml
            echo "--- End of content ---"
        # Mount the shared volume to write the config file
        volumeMounts:
        - name: config-volume
          mountPath: /config
        # Inject secrets as environment variables for the init container
        envFrom:
        - secretRef:
            name: postgres-nokiy
            namespace: self-nokiy-net

      # The main application container
      containers:
      - name: nokiy-server
        image: git.nokiy.net/reonokiy/nokiy:main
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        args: ["server", "start"]
        # Mount the shared volume to read the config file
        volumeMounts:
        - name: config-volume
          mountPath: /app
      
      # Define the volumes used by the pod
      volumes:
      - name: config-volume
        emptyDir: {}
