apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: greptimedb-standalone
  namespace: telemetry
spec:
  interval: 5m
  chart:
    spec:
      chart: greptimedb-standalone
      version: "0.2.12"
      sourceRef:
        kind: HelmRepository
        name: greptime
        namespace: flux-system
  values:
    annotations:
      operator.1password.io/item-path: "vaults/cake.nokiy.net/items/greptimedb"
      operator.1password.io/item-name: "greptimedb"
      operator.1password.io/auto-restart: "true"
    objectStorage:
      s3:
        root: greptimedb/cake.nokiy.net
        bucket: telemetry-storage
        region: auto
        endpoint: nokiy.net
    persistence:
      size: 5Gi
      storageClass: sata
  valuesFrom:
    - kind: Secret
      name: greptimedb
      valuesKey: ACCESS_KEY
      targetPath: objectStorage.credentials.accessKeyId
    - kind: Secret
      name: greptimedb
      valuesKey: SECRET_KEY
      targetPath: objectStorage.credentials.secretAccessKey
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: telemetry
spec:
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: "9.4.5"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    annotations:
      operator.1password.io/item-path: "vaults/cake.nokiy.net/items/grafana"
      operator.1password.io/item-name: "grafana"
      operator.1password.io/auto-restart: "true"
    admin:
      existingSecret: grafana
      userKey: username
      passwordKey: password
    plugins:
      - https://github.com/GreptimeTeam/greptimedb-grafana-datasource/releases/download/v2.0.7/info8fcc-greptimedb-datasource.zip;info8fcc-greptimedb-datasource
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: GreptimeDB
            isDefault: true
            type: info8fcc-greptimedb-datasource
            jsonData:
              host: http://greptimedb-standalone:4000
              defaultDatabase: "public"
              defaultTable: "default"
              logs:
                defaultDatabase: "public"
                defaultTable: "logs"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vector
  namespace: telemetry
spec:
  interval: 5m
  chart:
    spec:
      chart: vector
      version: "0.45.0"
      sourceRef:
        kind: HelmRepository
        name: vector
        namespace: flux-system
  values:
    role: Stateless-Aggregator
    customConfig:
      sources:
        internal_logs:
          type: internal_logs
        internal_metrics:
          type: internal_metrics
        vector_in:
          type: vector
          address: "0.0.0.0:9000"
      transforms:
        transformed_internal_logs:
          type: remap
          inputs:
            - internal_logs
          source: |
            if exists(.metadata) && is_object(.metadata) {
              if exists(.metadata.level) && is_string(.metadata.level) {
                level = downcase!(.metadata.level)
                .level = level
              }
            }

            if exists(.host) && is_string(.host) {
              .service = .host
            }

            .host = "cake.nokiy.net"

      sinks:
        greptimedb_metrics:
          type: greptimedb_metrics
          inputs:
            - "*_metrics"
          endpoint: "greptimedb-standalone:4001"
          dbname: "public"
          new_naming: true
        greptimedb_logs:
          type: greptimedb_logs
          inputs:
            - "transformed_internal_logs"
          endpoint: "http://greptimedb-standalone:4000"
          dbname: "public"
          table: "logs"
          compression: "none"
          encoding:
            timestamp_format: unix_us

---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vector-agent
  namespace: telemetry
spec:
  interval: 5m
  chart:
    spec:
      chart: vector
      version: "0.45.0"
      sourceRef:
        kind: HelmRepository
        name: vector
        namespace: flux-system
  values:
    role: Agent
    customConfig:
      sources:
        kubernetes_logs:
          type: kubernetes_logs

        host_metrics:
          type: host_metrics
          collectors:
            - cpu
            - memory
            - network
            - load
          namespace: host
          scrape_interval_secs: 15
      # transforms:
      #   transformed_kubernetes_logs:
      #     type: remap
      #     inputs:
      #       - kubernetes_logs
      #     source: |
      #       if exists(.metadata) && is_object(.metadata) {
      #         if exists(.metadata.level) {
      #           level, err = downcase(.metadata.level)
      #           if err != null {
      #             .level = null
      #           } else {
      #             .level = level
      #           }
      #         }
      #       }

      #       if exists(.host) && is_string(.host) {
      #         .service = .host
      #       }

      #       .host = "cake.nokiy.net"

      sinks:
        greptimedb_metrics:
          type: greptimedb_metrics
          inputs:
            - "host_metrics"
          endpoint: "greptimedb-standalone:4001"
          dbname: "public"
          new_naming: true
        greptimedb_logs:
          type: greptimedb_logs
          inputs:
            - "kubernetes_logs"
          endpoint: "http://greptimedb-standalone:4000"
          dbname: "public"
          table: "logs"
          compression: "none"
          encoding:
            timestamp_format: unix_us
